S
program
ident
begin
end.
while
do
to
end
for
from
then
if
else
true
false
not
or
and
break
+
-
;
*
/
<=
<
>
>=
=
!=
<-
(
)
[
]
entier
.
S ->
| programidentbeginLIend.
LI->
| ILI'
LI'->
|epsilon
|;LI
I ->
| Affectation
| While
| For
| If
| break
Affectation ->
| Valeur
Aff'->
|Expression
|BExpression
While ->
| while BExpression do LI end
For ->
| for ident from Valeur to Valeur do LI end
If ->
| if BExpression then LI else LI end
ValBool ->
|true
|false
BExpression->
|notBExpressionB'
|ConditionB'
|(BExpression)B'
|ValBoolB'
B'->
|BExpress'B'
|epsilon
BExpress'
|orBExpression
|andBExpression
Expression ->
|(Expression)E'
|VarNumE'
E'->
|OpArithExpressionE'
|epsilon
OpArith->
|+
|-
|*
|/
VarNum->
|ident VarNum'
|Expression
|entier
VarNum'->
|epsilon
|[Expression]
Valeur->
|ident
|entier
Condition->
|VarNum OpRel VarNum
OpRel->
|<=
|<
|>
|>=
|=
|!=
.end
